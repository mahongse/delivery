{"version":3,"sources":["assets/pin-pink.png","assets/pin-blue.png","assets/pin-black.png","constants/index.js","components/CardInfo/CardInfo.jsx","pages/Stops/Stops.jsx","mapStyles.js","pages/Map/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","generateID","Math","random","toString","substr","generateBarcode","parseInt","floor","initialData","id","barcode","status","done","time","eta","address","name","position","lat","lng","useStyles","makeStyles","theme","root","width","cursor","margin","backgroundColor","content","padding","alignItems","textLeft","textAlign","textRight","infoIcon","color","marginRight","infoTime","display","justifyContent","paddingBottom","navigation","paddingRight","spacer","activeRoot","doneRoot","navIcons","flexDirection","doneIcon","activeIconColor","etaColor","memo","info","index","handleActiveChange","handleDone","infoStatus","useMemo","slice","classes","Paper","elevation","className","onClick","Grid","container","item","xs","Avatar","Typography","component","variant","Divider","mapURL","window","open","minHeight","Stops","data","setData","justify","map","key","Helmet","mapStyles","height","defaultCenter","Map","useState","selectedAddress","setSelectedAddress","direction","style","googleMapsApiKey","mapContainerStyle","zoom","center","options","styles","icon","url","PinkPin","BluePin","BlackPin","scaledSize","onCloseClick","flexGrow","App","pathname","useLocation","AppBar","Tabs","value","TabIndicatorProps","background","centered","Tab","label","length","Link","to","exact","path","render","Boolean","location","hostname","match","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a539584c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pin-pink.4c3a51bd.png\";","module.exports = __webpack_public_path__ + \"static/media/pin-blue.df61b64b.png\";","module.exports = __webpack_public_path__ + \"static/media/pin-black.e2710d6f.png\";","const generateID = () => {\n  return (\n    \"_\" +\n    Math.random()\n      .toString(36)\n      .substr(2, 9)\n  );\n};\n\nconst generateBarcode = () => {\n  return parseInt(Math.floor(1000000 + Math.random() * 9999999));\n};\n\nexport const initialData = [\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '08:45',\n    address: {\n      name: '105 Teryan Street, Yerevan',\n      position: { lat: 40.190271, lng: 44.522181 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '11:00',\n    address: {\n      name: '5 Vazgen Sargsyan Street, 0010 Yerevan',\n      position: { lat: 40.177104, lng: 44.510443 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '08:45',\n    address: {\n      name: '22 Martiros Saryan Street, 0002, Yerevan',\n      position: { lat: 40.184946, lng: 44.505550 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '09:00 - 10:00',\n    eta: '10:01',\n    address: {\n      name: '14 Petros Adamyan Street, 0010, Yerevan',\n      position: { lat: 40.175556, lng: 44.511833 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '08:30',\n    address: {\n      name: '18/3 Amiryan Street, 0002, Yerevan',\n      position: { lat: 40.181566, lng: 44.507376 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '11:15',\n    address: {\n      name: '16 Marshal Baghramyan avenue, 0019, Yerevan',\n      position: { lat: 40.191366, lng: 44.512013 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 11:00',\n    eta: '10:01',\n    address: {\n      name: '1 American Avenue, 0082, Yerevan',\n      position: { lat: 40.165196, lng: 44.481577 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '09:05',\n    address: {\n      name: '1 Northern Avenue, Suite 24, 0001, Yerevan',\n      position: { lat: 40.183594, lng: 44.515198 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '09:00 - 10:00',\n    eta: '09:20',\n    address: {\n      name: '10 Mher Mkrtchyan Street, 0010, Yerevan',\n      position: { lat: 40.174891, lng: 44.512194 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 11:00',\n    eta: '11:10',\n    address: {\n      name: '7 Mesrop Mashtots Avenue, 0002, Yerevan',\n      position: { lat: 40.180010, lng: 44.505843 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 11:00',\n    eta: '10:10',\n    address: {\n      name: '40 Moskovyan Street, 0002, Yerevan',\n      position: { lat: 40.187839, lng: 44.509932 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '08:25',\n    address: {\n      name: '1, 3 Buzand Street, 0010, Yerevan',\n      position: { lat: 40.175536, lng: 44.518859 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '11:00 - 12:00',\n    eta: '11:45',\n    address: {\n      name: 'Dzoragyugh 1st Street, Yerevan',\n      position: { lat: 40.179451, lng: 44.500182 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 09:00',\n    eta: '09:10',\n    address: {\n      name: '15, 2 Paronyan Street, 0015, Yerevan',\n      position: { lat: 40.179828, lng: 44.499832 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '10:45',\n    address: {\n      name: '3 Hakob Hakobyan Street, 0001, Yerevan',\n      position: { lat: 40.199042, lng: 44.490746 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '10:45',\n    address: {\n      name: '3 Hakob Hakobyan Street, 0001, Yerevan',\n      position: { lat: 40.199042, lng: 44.490746 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '11:45',\n    address: {\n      name: '16 Halabyan Street, 0038, Yerevan',\n      position: { lat: 40.196731, lng: 44.479984 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '08:00 - 10:00',\n    eta: '10:15',\n    address: {\n      name: '3 Tsitsernakaberd Highway, 0082, Yerevan',\n      position: { lat: 40.179761, lng: 44.488092 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '09:00 - 10:00',\n    eta: '09:30',\n    address: {\n      name: '40 Marshal Baghramyan Avenue, 0019, Yerevan',\n      position: { lat: 40.193073, lng: 44.504448 }\n    }\n  },\n  {\n    id: generateID(),\n    barcode: generateBarcode(),\n    status: false,\n    done: false,\n    time: '10:00 - 12:00',\n    eta: '10:50',\n    address: {\n      name: '10 Tamanyan Street, 0009, Yerevan',\n      position: { lat: 40.191164, lng: 44.515614 }\n    }\n  }\n];\n","import React, { useMemo, memo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport InfoIcon from '@material-ui/icons/Info';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: 350,\n    cursor: 'pointer',\n    margin: 8,\n    backgroundColor: '#E1E4E4',\n  },\n  content: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  textLeft: {\n    textAlign: 'left',\n  },\n  textRight: {\n    textAlign: 'right'\n  },\n  infoIcon: {\n    color: '#C4291B',\n    marginRight: 4\n  },\n  infoTime: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    paddingBottom: 16\n  },\n  navigation: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    padding: 10,\n    paddingRight: 20,\n    color: '#5689EA'\n  },\n  spacer: {\n    marginRight: 50,\n  },\n  activeRoot: {\n    width: 350,\n    cursor: 'pointer',\n    margin: 8,\n    backgroundColor: '#fff'\n  },\n  doneRoot: {\n    width: 350,\n    cursor: 'pointer',\n    margin: 8,\n    backgroundColor: '#56666B',\n    color: '#fff'\n  },\n  navIcons: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  doneIcon: {\n    backgroundColor: '#5689EA'\n  },\n  activeIconColor: {\n    backgroundColor: '#D62E55'\n  },\n  etaColor: {\n    color: '#6CB26A'\n  }\n}));\n\nconst CardInfo = ({ info, index, handleActiveChange, handleDone }) => {\n  const { barcode, time, eta, address, status, done } = info;\n  const infoStatus = useMemo(() => !(parseInt(time.slice(-5)) > parseInt(eta.slice(0, 2))), [eta, time]);\n  const classes = useStyles();\n\n  const handlePageNavigate = () => {\n    const mapURL = `https://maps.google.com?q=${address.position.lat},${address.position.lng}`;\n    window.open(mapURL);\n  };\n\n  return (\n    <Paper\n      elevation={done ? 0 : 3}\n      className={classes[status && !done ? 'activeRoot' : done ? 'doneRoot' : 'root']}\n      onClick={handleActiveChange}>\n      <Grid container className={classes.content} >\n        <Grid item xs={2}>\n          <Avatar className={classes[done ? 'doneIcon' : !status ? '' : 'activeIconColor']}>{done ? <DoneIcon /> : index + 1}</Avatar>\n        </Grid>\n        <Grid item xs={6} className={classes.textLeft}>\n          <Typography component=\"p\">{barcode}</Typography>\n          <Typography variant=\"body2\" color={!done ? \"textSecondary\" : \"inherit\"} component=\"p\">\n            {address.name}\n          </Typography>\n        </Grid>\n        {!done && <Grid item xs={4} className={classes.textRight}>\n          <div className={classes.infoTime}>\n            {infoStatus && <InfoIcon className={classes.infoIcon} />}\n            <Typography variant=\"body2\" component=\"p\" className={infoStatus ? classes.infoIcon : classes.etaColor}>\n              {eta}\n            </Typography>\n          </div>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {time}\n          </Typography>\n        </Grid>}\n      </Grid>\n\n      {(status && !done) && <>\n        <Divider variant=\"inset\" />\n        <Grid className={classes.navigation}>\n          <div className={`${classes.navIcons} ${classes.spacer}`} onClick={handlePageNavigate}>\n            <NavigationIcon />\n            <Typography>Navigate</Typography>\n          </div>\n          <div className={classes.navIcons} onClick={handleDone} >\n            <DoneIcon />\n            <Typography>Finish</Typography>\n          </div>\n        </Grid >\n      </>}\n    </Paper >\n  );\n};\n\nexport default memo(CardInfo);","import React from 'react';\nimport CardInfo from '../../components/CardInfo';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Helmet } from 'react-helmet';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n    backgroundColor: '#56666B',\n  },\n}));\n\nconst Stops = ({ data, setData }) => {\n  const classes = useStyles();\n\n  const handleActiveChange = (index) => {\n    data[index].status = !data[index].status;\n    setData([...data]);\n  };\n\n  const handleDone = (index) => {\n    data[index].done = true;\n    setData([...data]);\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Grid container justify=\"center\">\n          {data &&\n            data.map((item, index) => (\n              <Grid key={item.id} item>\n                <CardInfo\n                  info={item}\n                  index={index}\n                  handleActiveChange={() => handleActiveChange(index)}\n                  handleDone={() => handleDone(index)}\n                />\n              </Grid>\n            ))}\n        </Grid>\n      </Grid>\n      <Helmet>\n        <title>Current stops</title>\n        <meta name=\"description\" content=\"Stops to deliver the goods\" />\n      </Helmet>\n    </Grid>\n  );\n};\n\nexport default Stops;\n","export default [\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#e9e9e9\"\n      },\n      {\n        \"lightness\": 17\n      }\n    ]\n  },\n  {\n    \"featureType\": \"landscape\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f5f5\"\n      },\n      {\n        \"lightness\": 20\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 17\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 29\n      },\n      {\n        \"weight\": 0.2\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 18\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.local\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 16\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f5f5\"\n      },\n      {\n        \"lightness\": 21\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dedede\"\n      },\n      {\n        \"lightness\": 21\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"visibility\": \"on\"\n      },\n      {\n        \"color\": \"#ffffff\"\n      },\n      {\n        \"lightness\": 16\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"saturation\": 36\n      },\n      {\n        \"color\": \"#333333\"\n      },\n      {\n        \"lightness\": 40\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.icon\",\n    \"stylers\": [\n      {\n        \"visibility\": \"off\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f2f2f2\"\n      },\n      {\n        \"lightness\": 19\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#fefefe\"\n      },\n      {\n        \"lightness\": 20\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#fefefe\"\n      },\n      {\n        \"lightness\": 17\n      },\n      {\n        \"weight\": 1.2\n      }\n    ]\n  }\n]","import React, { useState } from 'react';\nimport {\n  GoogleMap,\n  LoadScript,\n  Marker,\n  InfoWindow,\n} from '@react-google-maps/api';\nimport { Helmet } from 'react-helmet';\nimport Grid from '@material-ui/core/Grid';\nimport PinkPin from '../../assets/pin-pink.png';\nimport BluePin from '../../assets/pin-blue.png';\nimport BlackPin from '../../assets/pin-black.png';\nimport styles from '../../mapStyles';\n\nconst mapStyles = {\n  height: '100vh',\n  width: '100vw',\n};\n\nconst defaultCenter = { lat: 40.179188, lng: 44.499104 };\n\nconst Map = ({ data }) => {\n  const [selectedAddress, setSelectedAddress] = useState(null);\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ minHeight: '100vh' }}\n    >\n      <LoadScript googleMapsApiKey=\"AIzaSyD96_6J_OqRG6t_GpMuHnCQG-A6dGe8sdE\">\n        <GoogleMap\n          mapContainerStyle={mapStyles}\n          zoom={13}\n          center={defaultCenter}\n          options={{\n            styles: styles,\n          }}\n        >\n          {data.map((item) => (\n            <Marker\n              key={item.id}\n              position={item.address.position}\n              icon={{\n                url: `${\n                  item.status ? PinkPin : item.done ? BluePin : BlackPin\n                }`,\n                scaledSize: { height: 30, width: 30 },\n                style: { color: '#000' },\n              }}\n              onClick={() => setSelectedAddress(item)}\n            />\n          ))}\n\n          {selectedAddress && (\n            <InfoWindow\n              position={selectedAddress.address.position}\n              onCloseClick={() => setSelectedAddress(null)}\n            >\n              <div style={{ color: '#000' }}>\n                <h3>{selectedAddress.address.name}</h3>\n              </div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n      <Helmet>\n        <title>Status of stops</title>\n        <meta name=\"description\" content=\"Stops to deliver the goods\" />\n      </Helmet>\n    </Grid>\n  );\n};\n\nexport default Map;\n","import React, { useState } from 'react';\nimport { useLocation, Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { initialData } from '../src/constants';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport AppBar from '@material-ui/core/AppBar';\nimport Stops from '../src/pages/Stops';\nimport Map from '../src/pages/Map';\nimport './App.css';\n\nconst useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n    backgroundColor: '#000'\n  }\n});\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n  const classes = useStyles();\n  const { pathname } = useLocation()\n  \n  return (\n    <AppBar position=\"static\" className={classes.root}>\n      <Tabs\n        value={pathname}\n        TabIndicatorProps={{ style: { background: '#fff' } }}\n        variant=\"fullWidth\"\n        centered\n      >\n        <Tab label={`Stops (${data.length})`} value=\"/\" component={Link} to='/' />\n        <Tab label=\"Map\" value=\"/map\" component={Link} to='/map' />\n      </Tabs>\n      <Switch>\n        <Route exact path='/' render={() => <Stops data={data} setData={setData} />} />\n        <Route exact path='/map' render={() => <Map data={data} />} />\n        <Route render={() => <Redirect to=\"/\" />} />\n      </Switch>\n    </AppBar>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n// import ReactDOM from 'react-dom';\nimport './index.css';\nimport { render } from 'react-snapshot';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\n// const rootElement = document.getElementById('root');\n\n// if (rootElement.hasChildNodes()) {\n//   ReactDOM.hydrate(\n//     <HashRouter>\n//       <App />\n//     </HashRouter>,\n//     rootElement\n//   );\n// } else {\n//   ReactDOM.render(\n//     <HashRouter>\n//       <App />\n//     </HashRouter>,\n//     rootElement\n//   );\n// }\n\nrender(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}